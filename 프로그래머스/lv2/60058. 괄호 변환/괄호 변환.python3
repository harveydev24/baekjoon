from collections import deque


# 올바른 괄호문자열인지 체크하는 함수
# 스택 이용
def check(p):
    stack = deque([])
    for tmp in p:
        if tmp == '(':
            stack.append(tmp)
        else:
            if len(stack) == 0:
                return False
            else:
                stack.pop()
    return True


def solution(p):
    # 올바른 괄호 문자열이면 리턴
    if check(p):
        return p

    # u 찾기
    # 최소 단위의 균형 잡힌 괄호 문자열을 찾아야 하므로,
    # p를 앞에서부터 탐색하며
    # '('의 개수 cnt와 ')'의 개수 cnt2가 같아지는 순간 반복문 탈출
    i = 0
    cnt, cnt2 = 0, 0
    while True:
        if p[i] == '(':
            cnt += 1
        else:
            cnt2 += 1
        i += 1
        if cnt == cnt2:
            break

    # p를 u, v로 쪼개기
    u = p[:i]
    v = p[i:]

    # 만약 u가 올바른 괄호 문자열이라면
    if check(u):
        # v를 재귀호출한 결과를 붙여 리턴
        return u + solution(v)
    # u가 올바른 괄호 문자열이 아니라면
    else:
        # v를 재귀호출한 결과의 앞뒤에 괄호를 붙이고
        # u의 앞뒤를 잘라서
        # 괄호 방향 바꿔 붙인 후 리턴
        return '(' + solution(v) + ')' + ''.join(['(' if x == ')' else ')' for x in u[1:-1]])